#include <iostream>
using namespace std;
#define MAX_SIZE 5
class Queue 
{
    int arr[MAX_SIZE];
    int front;
    int rear;
    
    public:
    Queue()
    {
        front = -1;
        rear  = -1;
    }
    
    bool isEmpty()
    {
        if(front==-1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    bool isFull()
    {
        if(rear==MAX_SIZE - 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    void enQueue(int val)
    {
        
        if(isFull())
        {
            cout<<"Queue is full"<<endl;
        }
        else
        {
            front = 0;
            rear++;
            arr[rear] = val;
            cout<<val<<" added to queue."<<endl; 
        }
    }
    
    int deQueue()
    {
        
        if(isEmpty() or front==MAX_SIZE)
        {
            cout<<"Queue is empty"<<endl;
        }
        else
        {
            int delValue = arr[front];
            front++;
            cout<<"Deleted "<<delValue<<" from queue"<<endl;
            
            if(front==MAX_SIZE)
            {
                front = 0;
            }
        }
    }
    
    void display()
    {
        cout<<"Queue elements are: ";
        for(int i=front; i<=rear; i++)
        {
            cout<<arr[i]<<"\t";
        }
        cout<<"\nFront"<<front<<endl;
        cout<<"Rear"<<rear<<endl;
    }
};

int main()
{
    Queue q;
    int arr[MAX_SIZE];
    int i, numbers;
    
    
    for(i=0; i<MAX_SIZE; i++)
    {
        cout<<"Enter numbers: "<<endl;
        cin>>numbers;
        q.enQueue(numbers);
    }
    q.display();
    
    //enter number of elements to be Deleted
    q.deQueue();
    return 0;
}
